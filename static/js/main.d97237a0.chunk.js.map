{"version":3,"sources":["components/Header.js","components/DropDownCategorias.js","components/Noticia.js","components/SeccionNoticias.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","DropDownCategorias","handleClick","onChange","value","disabled","Noticia","noticia","src","urlToImage","alt","title","description","href","url","target","SeccionNoticias","state","this","props","noticias","map","Component","App","consultarNoticias","a","async","categoria","TOP_HEADLINES_URL","process","fetch","respuesta","json","console","log","setState","articles","e","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kPAQeA,EANA,WACX,OACI,wBAAIC,UAAU,4BAAd,uBCaOC,EAfY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACzB,OACI,4BAAQF,UAAU,qBAAqBG,SAAUD,GAC7C,4BAAQE,MAAM,GAAGC,UAAQ,GAAzB,0BACA,4BAAQD,MAAM,wBAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,iBAAd,mBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,SACA,4BAAQA,MAAM,cAAd,mBCMGE,EAhBC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,yBAAKP,UAAU,QAEX,yBAAKA,UAAU,2BAA2BQ,IAAKD,EAAQE,WAAYC,IAAI,KACvE,yBAAKV,UAAU,aACX,wBAAIA,UAAU,cAAcO,EAAQI,OACpC,uBAAGX,UAAU,aAAaO,EAAQK,YAAlC,MAEJ,yBAAKZ,UAAU,eACX,uBAAGa,KAAMN,EAAQO,IAAKC,OAAO,UAAS,4BAAQf,UAAU,2BAAlB,4BCoBvCgB,E,2MA3BXC,MAAQ,G,wEAGJ,OACI,yBAAKjB,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,0BAAyB,mEACvC,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6CACX,kBAAC,EAAD,CAAoBE,YAAagB,KAAKC,MAAMjB,gBAIpD,yBAAKF,UAAU,OACVkB,KAAKC,MAAMC,SAASC,KAAI,SAAAd,GAAO,OAC5B,yBAAKP,UAAU,OACX,kBAAC,EAAD,CAASO,QAASA,e,GAjBpBe,aCiDfC,E,2MAhDbN,MAAQ,CACNG,SAAU,I,EAOZI,kBAAoB,4CAAAC,EAAAC,OAAA,uDAAOC,EAAP,+BAAmB,UAE/BC,EADWC,0BACkB,qCAAqCF,EAAU,2CAFhE,WAAAF,EAAA,MAKMK,MAAMF,IALZ,cAKZG,EALY,kBAAAN,EAAA,MAMKM,EAAUC,QANf,OAMZZ,EANY,OASlBa,QAAQC,IAAIN,GAEZ,EAAKO,SAAS,CACZf,SAAWA,EAASgB,WAZJ,uC,EAiBpBlC,YAAc,SAACmC,GACb,EAAKF,SAAS,CACZR,UAAYU,EAAEtB,OAAOX,QAEvB,EAAKoB,kBAAkBa,EAAEtB,OAAOX,Q,qJAxBhCc,KAAKM,oB,gFA4BL,OACE,kBAAC,WAAD,KAEE,kBAAC,EAAD,MAEA,yBAAKxB,UAAU,aACb,kBAAC,EAAD,CAAiBE,YAAagB,KAAKhB,YAAakB,SAAUF,KAAKD,MAAMG,iB,GAxC7DE,aCQEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.d97237a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"text-center header-title\">Portal De Noticias</h1>\r\n    );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst DropDownCategorias = ({handleClick}) => {\r\n    return (\r\n        <select className=\"mdb-select md-form\" onChange={handleClick}>\r\n            <option value=\"\" disabled>Elige una categor&iacute;a</option>\r\n            <option value=\"general defaultValue\">General</option>\r\n            <option value=\"science\">Ciencia</option>\r\n            <option value=\"sports\">Deportes</option>\r\n            <option value=\"entertainment\">Entretenimiento</option>\r\n            <option value=\"business\">Negocios</option>\r\n            <option value=\"health\">Salud</option>\r\n            <option value=\"technology\">Tecnolog&iacute;a</option>\r\n        </select>\r\n    );\r\n}\r\n \r\nexport default DropDownCategorias;","import React from 'react';\r\n\r\nconst Noticia = ({noticia}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            {/*<img className=\"card-img-top img-noticia\" src=\"https://img.europapress.es/fotoweb/fotonoticia_20141216162833_800.jpg\" alt=\"\"></img> */}\r\n            <img className=\"card-img-top img-noticia\" src={noticia.urlToImage} alt=\"\"></img>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{noticia.title}</h5>\r\n                <p className=\"card-text\">{noticia.description}}</p>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <a href={noticia.url} target=\"_blank\"><button className=\"btn btn-success-primary\">VER NOTICIA COMPLETA</button></a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Noticia;","import React, { Component } from 'react';\r\nimport DropDownCategorias from './DropDownCategorias';\r\nimport Noticia from './Noticia';\r\n\r\nclass SeccionNoticias extends Component {\r\n    state = {  }    \r\n\r\n    render() { \r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"text-center body-title\"><b>ENCUENTRA NOTICIAS POR CATEGOR√çA</b></h4>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-8 offset-sm-2 col-md-6 offset-md-3\">\r\n                            <DropDownCategorias handleClick={this.props.handleClick} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        {this.props.noticias.map(noticia => (\r\n                            <div className=\"col\">\r\n                                <Noticia noticia={noticia}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SeccionNoticias;","import React, { Component, Fragment } from 'react';\nimport Header from './components/Header';\nimport SeccionNoticias from './components/SeccionNoticias';\n\nclass App extends Component {\n  state = {\n    noticias: []\n  }\n  \n  async componentDidMount() {\n    this.consultarNoticias();\n  }\n\n  consultarNoticias = async (categoria = 'general') => {\n    const URL_BASE = process.env.REACT_APP_API_URL;\n    const TOP_HEADLINES_URL = URL_BASE+'top-headlines?country=mx&category='+categoria+'&apiKey='+process.env.REACT_APP_NEWS_API_KEY;\n    //const TOP_HEADLINES_URL = URL_BASE+'top-headlines?country=mx&category=${categoria}&apiKey='+process.env.REACT_APP_NEWS_API_KEY;\n\n    const respuesta = await fetch(TOP_HEADLINES_URL);\n    const noticias = await respuesta.json();\n\n    //console.log(noticias);\n    console.log(TOP_HEADLINES_URL);\n\n    this.setState({\n      noticias : noticias.articles\n    });\n\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      categoria : e.target.value\n    });\n    this.consultarNoticias(e.target.value);\n  }\n\n  render() { \n    return ( \n      <Fragment>\n        \n        <Header />\n\n        <div className=\"container\">\n          <SeccionNoticias handleClick={this.handleClick} noticias={this.state.noticias}/>\n        </div>\n      \n      </Fragment>\n    );\n  }\n\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}